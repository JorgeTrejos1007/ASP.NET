@page
@model PIBasesISGrupo1.Pages.Curso.AprobarCursoModel
@{
    ViewData["Title"] = "AprobarCurso";
    var listaDeCursos = (List<Tuple<PIBasesISGrupo1.Models.Cursos, PIBasesISGrupo1.Models.Miembro>>)ViewData["CursosPropuestos"];

}
<h2>Cursos Propuestos</h2>

    @foreach (var infoCursos in listaDeCursos)
    {
        
        var curso = infoCursos.Item1;
        var educador = infoCursos.Item2;
        <div class="col-lg-4 right-contents">
            <ul>
                <li>
                    <a class="justify-content-between d-flex" href="#">
                        <p>Curso</p>
                        <span class="or">@curso.nombre</span>


                    </a>
                </li>

                <li>
                    <a class="justify-content-between d-flex" href="#">
                        <p>Email</p>
                        <span class="or">@curso.emailDelEducador</span>


                    </a>
                </li>

                <li>
                    <a class="justify-content-between d-flex" href="#">
                        <p>Educador</p>
                        <span class="or">@educador.nombre @educador.primerApellido </span>


                    </a>
                </li>

                <li>
                  
                    <a href="data:@curso.tipoDocInformativo;base64,@(Convert.ToBase64String(curso.byteArrayDocument))" download="@curso.nombre .pdf">
                        <span class="or">Descargar documento descriptivo del curso</span>
                    </a>
                </li>

                <li>
                    <a class="justify-content-between d-flex" href="#">
                        <p>Precio </p>
                        <span>$@curso.precio</span>
                    </a>
                </li>



            </ul>
           
            <form method="post" asp-route-id="@curso.nombre">
                <button class="primary-btn2 text-uppercase enroll rounded-0">Aprobar</button>
            </form>
        </div>
        
    }


