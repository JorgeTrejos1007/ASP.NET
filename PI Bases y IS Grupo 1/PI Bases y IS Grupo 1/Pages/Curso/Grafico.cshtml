@page
@model PIBasesISGrupo1.Pages.Curso.GraficoModel
@{
    var cursosDisponibles = (List<string>)ViewData["cursos"];
}}

<!DOCTYPE HTML>
<html>
<head>
    <script>
        window.onload = function () {

            var chart = new CanvasJS.Chart("chartContainer", {
	            theme: "light2", // "light1", "light2", "dark1", "dark2"
	            exportEnabled: true,
	            animationEnabled: true,
	            title: {
		            text: "Automotive Semiconductor Vendors 2015",
		            fontSize: 21
	            },
	            data: [{
                    type: "pie",
                    click: onClick,
		            startAngle: 160,
		            toolTipContent: "<b>{label}</b>: {y}%",
		            indexLabel: "{label} - {y}%",
		            dataPoints: @Html.Raw(TempData["Grafico"])
	            }]
            });
            chart.render();

            function onClick(e) {
                if (e.dataPoint.label == "Cursando") {
                    if (document.getElementById("chartContainer2").hidden == true) {
                        document.getElementById("chartContainer2").hidden = false;
                        graficoDeMaterialesVistos()
                    } else {
                        document.getElementById("chartContainer2").hidden = true;
                    }


                } 
                
             }


        }
    </script>
</head>
<body>

    <div>
        <form method="post" enctype="multipart/form-data">
            <span asp-validation-for="@Model.cursosAFiltrar" class="text-danger"></span>
            <select class="border-0 habilidades-select single-input-primary " asp-for="@Model.cursosAFiltrar" multiple="multiple" size="@cursosDisponibles.Count" required>
                @foreach (var curso in cursosDisponibles)
                {

                    <option value="@curso">@curso</option>

                    <br>
                }
            </select>

            <input type="submit" value="Filtrar" class="primary-btn2 text-uppercase enroll rounded-0" aps-page-handler="OnPost" />

        </form>
    </div>
    <div id="chartContainer" style="height: 370px; width: 100%;"></div>
    <div id="chartContainer2" style="height: 370px; width: 100%;"></div> 
    <div id="habilidadesEstudiantes" style="height: 370px; width: 100%;"></div>
    
    <script src="https://canvasjs.com/assets/script/canvasjs.min.js"></script>
    <script src="https://canvasjs.com/assets/script/jquery-1.11.1.min.js"></script>
</body>
</html>

<script>


   
    function graficoDeMaterialesVistos() {

        var chart = new CanvasJS.Chart("chartContainer2", {
            theme: "dark2",
            exportFileName: "Doughnut Chart",
            exportEnabled: true,
            animationEnabled: true,
            title: {
                text: "Porcentaje De Avance De Los Estudiantes"
            },
            legend: {
                cursor: "pointer",
                itemclick: explodePie
            },
            data: [{
                type: "doughnut",
                innerRadius: 90,
                showInLegend: false,
                indexLabel: "{label} - {y}%",
                dataPoints: @Html.Raw(TempData["GraficoMateriales"])

            }]
        });
        chart.render();

        function explodePie(e) {
            if (typeof (e.dataSeries.dataPoints[e.dataPointIndex].exploded) === "undefined" || !e.dataSeries.dataPoints[e.dataPointIndex].exploded) {
                e.dataSeries.dataPoints[e.dataPointIndex].exploded = true;
            } else {
                e.dataSeries.dataPoints[e.dataPointIndex].exploded = false;
            }
            e.chart.render();
        }

    }
      function habilidades () {
  
          var chart = new CanvasJS.Chart("habilidadesEstudiantes", {
	        animationEnabled: true,
	        theme: "light2", // "light1", "light2", "dark1", "dark2"
	        title:{
		        text: "Habilidades mas Frecuentes"
	        },
	        axisY: {
		        title: "Cantidad de Personas"
	        },
	        data: [{        
		        type: "column",  
		        showInLegend: false, 
		        legendMarkerColor: "grey",
		        dataPoints:@Html.Raw(TempData["GraficoHabilidades"])
	        }]
        });
        chart.render();

      }
    habilidades();
</script>