@page
@model PIBasesISGrupo1.Pages.Comunidad.GraficoComunidadModel
@{
    var topTopicos = (List<string>)ViewData["TopTopicos"];
}

<head>
    <h2>Estadísticas de la Comunidad</h2>
</head>


<body>
    @Html.AntiForgeryToken()
    <div class="row" style="margin-top:80px;">
        <div id="tipoUsuarios" class="col-lg-4 col-md-6"></div>
        <div id="topCursos" class="col-lg-4 col-md-6"></div>
        <div id="topTopicosCursos" class="col-lg-4 col-md-6">
            <ul>
                <h3 style="text-align:left;">Tópicos más buscados según cursos</h3>
                @{
                    foreach (var topico in topTopicos)
                    {
                        <li>@topico</li>
                    }
                }
            </ul>

        </div>
        <div id="cantPorPais" style="height: 300px; width: 50%; margin-top:50px;"></div>
        <div id="habilidadesPorPais"  style="height: 300px; width: 50%; margin-top:50px;"></div>

    </div>

    <script src="https://canvasjs.com/assets/script/canvasjs.min.js"></script>
    <script src="https://canvasjs.com/assets/script/jquery-1.11.1.min.js"></script>
</body>
<script>


    function habilidadesPorPais(data) {


            var chart = new CanvasJS.Chart("habilidadesPorPais", {
                animationEnabled: true,
                title: {
                    text: "Habilidades",
                    horizontalAlign: "left"
                },
                data: [{
                    type: "doughnut",
                    startAngle: 60,
                    //innerRadius: 60,
                    indexLabelFontSize: 17,
                    indexLabel: "{label} - #percent%",
                    toolTipContent: "<b>{label}:</b> {y} (#percent%)",
                    dataPoints: data 
                }]
            });
            chart.render();


        
            
    }

    function GraficoTopCursos () {

        var chart = new CanvasJS.Chart("topCursos", {
        animationEnabled: true,
	    theme: "light2", // "light1", "light2", "dark1", "dark2"
	    title:{
        text: "Cursos más matriculados"

        },
	    axisY: {
        title: "Cantidad de estudiantes"

        },
	    data: [{
        type: "column",
		    showInLegend: false,
		    legendMarkerColor: "grey",
		    dataPoints:@Html.Raw(TempData["GraficoTopCursos"])

        }]
        });
        chart.render();

        }
    GraficoTopCursos();
        function tipoUsuarios () {
            var chart = new CanvasJS.Chart("tipoUsuarios", {
	            theme: "light2", // "light1", "light2", "dark1", "dark2"
	            exportEnabled: false,
	            animationEnabled: true,
	            title: {
		            text: "Tipos de usuario"
	            },
	            data: [{
		            type: "pie",
		            startAngle: 25,
		            toolTipContent: "<b>{label}</b>: {y}%",
		            showInLegend: "true",
		            legendText: "{label}",
		            indexLabelFontSize: 16,
		            indexLabel: "{label} - {y}%",
		            dataPoints: @Html.Raw(TempData["GraficoTiposUsuario"])
	            }]
            });
            chart.render();

         }

    tipoUsuarios();

    function cantPorPais () {

        var chart = new CanvasJS.Chart("cantPorPais", {
                theme: "light2",
	        animationEnabled: true,

	        title:{
		        text:"Miembros por país"
	        },
	        axisX:{
		        interval: 1
	        },

            data: [{
                click: onClick,
		        type: "bar",
		        name: "companies",
		        axisYType: "secondary",

		        dataPoints:  @Html.Raw(TempData["GraficoCantidadDeMiembrosPorPais"])

	        }]
        });
        chart.render();
        function onClick(e) {
            
            //prueba(e.dataPoint.label);
            var dataPointsA = []
            $.ajax({
                type: "POST",
                url: "GraficoComunidad?handler=ObtenerHabilidaesYtiposDeUsuario",
                beforeSend: function (xhr) {
                    xhr.setRequestHeader("XSRF-TOKEN",
                        $('input:hidden[name="__RequestVerificationToken"]').val());
                },
                data: { "pais": e.dataPoint.label },
                success: function (response) {
                    
                    habilidadesPorPais(response.Item1);

                },
                failure: function (response) {
                    alert('fallo');
                },
                error: function (response) {
                    alert('error');
                }

            });

            


        }

    }
    cantPorPais();




</script>
